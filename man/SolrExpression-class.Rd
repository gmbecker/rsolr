\name{SolrExpression-class}
\docType{class}

\alias{class:SolrExpression}
\alias{SolrExpression-class}

% Coercion:
\alias{as.character,AbstractSolrFunctionCall-method}
\alias{as.character,FRangeQParserExpression-method}
\alias{as.character,JoinQParserExpression-method}
\alias{as.character,LuceneRange-method}
\alias{as.character,SimpleExpression-method}
\alias{as.character,SolrFunctionCall-method}
\alias{as.character,SolrFunctionExpression-method}
\alias{as.character,SolrLuceneAND-method}
\alias{as.character,SolrLuceneOR-method}
\alias{as.character,SolrLuceneProhibit-method}
\alias{as.character,SolrLuceneTerm-method}
\alias{as.character,SolrQParserExpression-method}
\alias{as.character,SolrSortExpression-method}

% Translation:
\alias{translate,SolrExpression,SolrExpression-method}
\alias{SymbolFactory,SolrExpression-method}
\alias{SymbolFactory,SolrQParserExpression-method}
\alias{Promise,SolrLuceneSymbol,Solr-method}
\alias{Promise,SolrSymbol,Solr-method}

% Show:

\title{SolrExpression}
\description{
  There is a formal framework for constructing and manipulating the Solr
  languages that is not yet exposed. Please inform the authors if
  exposing the framework would be helpful. Perhaps it would be helpful
  in support of implementing new functionality on top of
  \code{SolrPromise}.
}

\author{ Michael Lawrence }

\keyword{methods}
\keyword{classes}
